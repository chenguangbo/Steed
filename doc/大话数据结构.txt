数据结构是计算机存储、组织数据的方式。
数据结构是指相互之间存在一种或多种特定关系的数据元素的集合。
一个数据结构是由数据元素依据某种逻辑联系组织起来的。
对数据元素间逻辑关系的描述称为数据的逻辑结构；
数据的存储结构是数据结构的实现形式



你的好，对别人来说就像一颗糖，吃了就没了，而你的不好，就像一道疤痕留下了，会永远的存在，这就是人性！生活给了我们很多考验，我们学会了去接受和宽容，如果有那么一个人，因为你的一点好，就原谅你所有的不好，那就好好珍惜吧！



一.基本概念和术语
1.数据
    数据:是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。
(被操作的东西)
2.数据元素
数据元素：是组成数据的、有一定的基本单位，在计算机中通常作为整体处理。也被称为记录。
（Java类中的分类）
3.数据项
数据项：一个数据元素可以由若干个数据项组成
数据项数数据不可分割的最小单位。
（属性  原子性   不可分割）
二.数据结构
数据结构：是相互之间存在一种或多种特定关系的数据元素的集合

三.逻辑结构
逻辑结构：是指数据对象中数据元素之间的相互关系。
1.集合结构
集合结构：集合结构中的数据元素除了同属于一个集合外，他们之间没有其他关系。
（各自对立存在）
2.线性结构
线性结构：线性结构中数据元素之间是一对一的关系。
（成串）
3.树形结构
树形结构：树形结构中的数据之间存在一种一对多的层次关系。
4.图形结构
图形结构：图形结构的数据元素是多对多的关系
四.物理结构
物理结构：是指数据的逻辑结构在计算中的存储形式。
1.顺序存储结构
顺序存储结构：是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。
2.链式存储结构
链式存储结构：是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。
五.抽象数据类型
1.数据类型
数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作总称。
2.抽象数据类型
抽象数据类型：是指一个数学模型及定义在该模型上的一组操作。

六.算法
 算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的优先序列，并且每条指令表示一个或多个操作。
1.算法的特性
    1）.输入输出
    2）.有穷性
    3）.确定性
    4）.可行性
2.算法设计要求
    1）.正确性
    2）.可读性
    3）.健壮性
    4）.时间效率高和存储量低


眼光 胸怀 实力

七.线性表
线性表（List）：零个或多个数据元素的有限序列

 
（有序 有限 ）

罗曼蒂克

顺序存储定义
线性表的顺序存储结构，指的是用一段地址连续的存储单元依次存储线性表的数据元素

线性存储和数组的关系



顺序存储结构需要三个属性：
            1.存储空间的起始位置
            2.线性表的最大存储容量
            3.线性表达的当前长度


线性表的优缺点

插入和删除是需要移动大量元素

线性表的链式存储结构

栈：是仅限定在表位插入和删除操作的线性表
队列：是只允许在一端进行插入，而在另一端进行删除操作的线性表



两栈共享空间

一个数字一个栈两端插入    



栈的链式存储结构
    单链表有头指针，栈顶指针也是必须的 
   


顺序栈和链栈：如果栈的使用过程中元素变化不可预料，有时很小，有时非常大，那么最好用链栈，反之，如果它的变化在可控范围内，建议使用顺序栈会更好一些




栈的作用：栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题的核心。反之，向数组等，因为要分散精力去考虑数组的小标增减等细节问题，反而掩盖了问题的本质。



斐波那契数列


八.队列
队列:队列是只允许一端进行插入操作,而在另一端进行删除操作的线性表

链队列:队列的链式存储结构,其实就是线性表的单链表,只不过它只能尾进头出而已

九.串
串:串是由零个或多个字符串组成的有限序列.

KMP算法

赫夫曼树



十.图
图:图(Graph)是由顶点的有穷非空集合和顶点之间边的集合组成,通常表示为:G(V,E) 其中    G表示一个图    V是图G中顶点的集合,E是图G中边的集合.


线性表中数据元素叫元素,树中将数据元素叫节点,在图中数据元素,称为顶点


1.图中不允许没有顶点
2.顶点要有穷非空
3.顶点与顶点之间的关系用边来表示
4.顶点与顶点之间的边没有方向,则称这条边为无向边
5.如果图中的任意两个顶点之间的边都是无向边,则称该图为无向图
6.有向边:顶点到顶点的边有方向,则称这条边为有向边  (弧)
7.在图中,若不存在顶点到其自身的边,且同一条边不重复出现,则称这样的图为简单图
8.在无向图中,如果任意两个顶点之间都存在边,则称该图为无向完全图
9在有向图中,如果任意两个顶点之间都存在方向互为相反的两条弧,则称该图为有向完全图
10.又很少条边或弧的图称为稀疏图,反之称为稠密图
11.有些图的边或弧具有与它相关的数字,这种与图的边会弧相关的数叫做权          带权的图称为网
12.从第一顶点到最后一个顶点相同的路径称为回路或环



十一.
查找表:是同一类型数据元素(或记录)构成的集合
关键字:是数据元素中某个数据项的值,又称为键值
主关键字:若此关键字可以唯一地标识一个记录,则称次关键字为主关键字
次关键字:对于那些可以识别多个数据元素(或记录)的关键字,我们成为次关键字
动态查找表:在查找过程中同时插入查找表中不存在的数据元素,或者从查找表中删除已经存在的某个数据元素.
顺序查找:又叫线性查找,是最基本的查找技术,它的查找过程是:从表中的第一个(或最后一个)记录开始,逐个进行记录的关键字和给定值比较,若某个记录的关键字和给定值相等,则查找成功,查找所查的记录;如果直到最后一个(或第一个)记录,其关键字和给定值比较都不相等时,则表中没有所查找的记录,查找不成功.


折半查找:(二分查找):
            前提 ①.线性表中的记录必须是关键码有序的(通常从大到小有序),
                     ②.线性表必须采用顺序存储
索引就是把一个关键字与它对应的记录相关的过程
倒排索引:其中记录号表存储具有相同次关键字的所有记录的记录号(可以是指向记录的指针是该记录的主关键字).这样的索引方法就是倒排索引
二叉树查找


散列技术:是在记录的存储位置和他的关键字之间建立一个确定的对应关系f .   使得每一个关键字key对应一个存储位置f

f称为散列函数,又称hash函数       按这个思想,采用散列技术将记录存储在一块连续的空间中,这块连续的存储空间称为散列表或hash(哈希表)


散列技术即是一种存储方法,也是一种查找方法.

散列技术最适合的求解问题是查找与给定相等的记录.
对于查找来说,简化了比较过程效率就会大大提高.  散列技术不具备很多常规数据结构的能力.


散列算法:
1.计算散列地址所需的时间.
2.关键字的长度.
3.散列表的大小.
4.关键字的分布情况.
5.记录查找的频率.



处理散列冲突的方法:
    开放定址发:就是一旦发生冲突,就去寻找下一个空的散列地址,只要散列表足够大,空的散列地址总能找到,并将记录存入.
